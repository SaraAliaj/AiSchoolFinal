services:
  # MySQL Database
  - type: pserv
    name: quiz-database
    env: docker

    disk:
      name: data
      mountPath: /var/lib/mysql
      sizeGB: 10
    envVars:
      - key: MYSQL_ROOT_PASSWORD
        sync: false
      - key: MYSQL_DATABASE
        value: aischool
      - key: MYSQL_USER
        sync: false
      - key: MYSQL_PASSWORD
        sync: false
    dockerContext: .
    dockerfilePath: ./Dockerfile.mysql

  # Node.js Backend service
  - type: web
    name: quiz-node-backend
    env: node
    buildCommand: cd backend/node && npm install
    startCommand: cd backend/node && npm run init-db && npm start
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 3000
      - key: DB_HOST
        fromService:
          name: quiz-database
          type: pserv
          property: host
      - key: DB_PORT
        fromService:
          name: quiz-database
          type: pserv
          property: port
      - key: DB_USER
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: DB_NAME
        value: aischool
      - key: JWT_SECRET
        generateValue: true

  # Python Backend service
  - type: web
    name: quiz-python-backend
    env: python
    buildCommand: cd backend/python && pip install -r requirements.txt
    startCommand: cd backend/python && uvicorn main:app --host 0.0.0.0 --port $PORT
    healthCheckPath: /health
    autoDeploy: true
    envVars:
      - key: PORT
        value: 8000
      - key: ENV
        value: production
      - key: DB_HOST
        fromService:
          name: quiz-database
          type: pserv
          property: host
      - key: DB_PORT
        fromService:
          name: quiz-database
          type: pserv
          property: port
      - key: DB_USER
        sync: false
      - key: DB_PASSWORD
        sync: false
      - key: DB_NAME
        value: aischool
      - key: XAI_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false

  # Frontend static site
  - type: web
    name: quiz-frontend
    env: static
    buildCommand: cd frontend && npm install && npm run build
    staticPublishPath: ./frontend/dist
    envVars:
      - key: VITE_NODE_API_URL
        fromService:
          name: quiz-node-backend
          type: web
          property: host
      - key: VITE_NODE_API_PORT
        fromService:
          name: quiz-node-backend
          type: web
          property: port
      - key: VITE_PYTHON_API_URL
        fromService:
          name: quiz-python-backend
          type: web
          property: host
      - key: VITE_PYTHON_API_PORT
        fromService:
          name: quiz-python-backend
          type: web
          property: port
      - key: VITE_WS_URL
        fromService:
          name: quiz-python-backend
          type: web
          property: host
      - key: VITE_WS_PORT
        fromService:
          name: quiz-python-backend
          type: web
          property: port
    routes:
      - type: rewrite
        source: /*
        destination: /index.html 